/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
//import javax.swing.ImageIcon;

/**
 *
 * @author Eduardo
 */
public class MainFrame extends javax.swing.JFrame {

    // Defines
    private static final boolean BY_SOFTWARE = true;
    private static final boolean BY_HARDWARE = false;
    private static final boolean BIN_MODE = true;
    private static final boolean GATES_MODE = false;
    private final int BAUD_RATE = 9600;
    // Variables
    private SerialCOM arduinoUNO;
    private String comPortID;
    private int decimalValue, gate, buttonInput1, buttonInput2;
    private boolean operationMode, operationalControl;

    /**
     * Default constructor
     */
    public MainFrame() {
        initComponents();
        arduinoUNO = null;
        restartInterface();
        // Select COM7 wich default
        comPortID = "COM" + Integer.toString(jComboBoxSerialCOM.getSelectedIndex() + 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxGatesMenu = new javax.swing.JComboBox();
        jSliderDSW3 = new javax.swing.JSlider();
        jSliderDSW2 = new javax.swing.JSlider();
        jSliderDSW1 = new javax.swing.JSlider();
        jPanelLed7 = new javax.swing.JPanel();
        jPanelLed6 = new javax.swing.JPanel();
        jPanelLed5 = new javax.swing.JPanel();
        jPanelLed4 = new javax.swing.JPanel();
        jPanelLed3 = new javax.swing.JPanel();
        jPanelLed2 = new javax.swing.JPanel();
        jPanelLed1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jRadioBuutonBinMode = new javax.swing.JRadioButton();
        jRadioButtonGatesMode = new javax.swing.JRadioButton();
        jPanelConnectionStatus = new javax.swing.JPanel();
        jPanelBySoftwareColor = new javax.swing.JPanel();
        jCheckBoxSoftware = new javax.swing.JCheckBox();
        jPanelByHardwareColor = new javax.swing.JPanel();
        jCheckBoxHardware = new javax.swing.JCheckBox();
        jButtonConnect = new javax.swing.JButton();
        jButtonDisconnect = new javax.swing.JButton();
        jToggleButtonInput1 = new javax.swing.JToggleButton();
        jToggleButtonInput2 = new javax.swing.JToggleButton();
        jComboBoxSerialCOM = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemRestart = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuContolMode = new javax.swing.JMenu();
        jRadioButtonMenuItemSoftware = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemHardware = new javax.swing.JRadioButtonMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuConnection = new javax.swing.JMenu();
        jRadioButtonMenuItemConnected = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemDisconnected = new javax.swing.JRadioButtonMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuOperationalMode = new javax.swing.JMenu();
        jRadioButtonMenuItemBinary = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemGates = new javax.swing.JRadioButtonMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SISDEM");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(415, 460));
        setMinimumSize(new java.awt.Dimension(415, 460));
        setPreferredSize(new java.awt.Dimension(415, 460));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxGatesMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LOGIC GATES", "NOT (N√ÉO)", "AND (E)", "OR (OU)", "NOR", "NAND", "XOR", "XNOR" }));
        jComboBoxGatesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxGatesMenuMouseClicked(evt);
            }
        });
        jComboBoxGatesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGatesMenuActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxGatesMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 130, 40));

        jSliderDSW3.setMaximum(1);
        jSliderDSW3.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderDSW3.setValue(0);
        jSliderDSW3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSliderDSW3MouseDragged(evt);
            }
        });
        jSliderDSW3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSliderDSW3MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jSliderDSW3MousePressed(evt);
            }
        });
        getContentPane().add(jSliderDSW3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 30, 50));

        jSliderDSW2.setMaximum(1);
        jSliderDSW2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderDSW2.setToolTipText("");
        jSliderDSW2.setValue(0);
        jSliderDSW2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSliderDSW2MouseDragged(evt);
            }
        });
        jSliderDSW2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSliderDSW2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jSliderDSW2MousePressed(evt);
            }
        });
        getContentPane().add(jSliderDSW2, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 150, 30, 50));

        jSliderDSW1.setMaximum(1);
        jSliderDSW1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderDSW1.setValue(0);
        jSliderDSW1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSliderDSW1MouseDragged(evt);
            }
        });
        jSliderDSW1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSliderDSW1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jSliderDSW1MousePressed(evt);
            }
        });
        getContentPane().add(jSliderDSW1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 40, 50));

        jPanelLed7.setBackground(java.awt.Color.gray);
        jPanelLed7.setToolTipText("");
        jPanelLed7.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed7Layout = new javax.swing.GroupLayout(jPanelLed7);
        jPanelLed7.setLayout(jPanelLed7Layout);
        jPanelLed7Layout.setHorizontalGroup(
            jPanelLed7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed7Layout.setVerticalGroup(
            jPanelLed7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jPanelLed6.setBackground(java.awt.Color.gray);
        jPanelLed6.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed6Layout = new javax.swing.GroupLayout(jPanelLed6);
        jPanelLed6.setLayout(jPanelLed6Layout);
        jPanelLed6Layout.setHorizontalGroup(
            jPanelLed6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed6Layout.setVerticalGroup(
            jPanelLed6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed6, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 60, -1, -1));

        jPanelLed5.setBackground(java.awt.Color.gray);
        jPanelLed5.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed5Layout = new javax.swing.GroupLayout(jPanelLed5);
        jPanelLed5.setLayout(jPanelLed5Layout);
        jPanelLed5Layout.setHorizontalGroup(
            jPanelLed5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed5Layout.setVerticalGroup(
            jPanelLed5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed5, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 60, -1, 30));

        jPanelLed4.setBackground(java.awt.Color.gray);
        jPanelLed4.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed4Layout = new javax.swing.GroupLayout(jPanelLed4);
        jPanelLed4.setLayout(jPanelLed4Layout);
        jPanelLed4Layout.setHorizontalGroup(
            jPanelLed4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed4Layout.setVerticalGroup(
            jPanelLed4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed4, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 60, -1, -1));

        jPanelLed3.setBackground(java.awt.Color.gray);
        jPanelLed3.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed3Layout = new javax.swing.GroupLayout(jPanelLed3);
        jPanelLed3.setLayout(jPanelLed3Layout);
        jPanelLed3Layout.setHorizontalGroup(
            jPanelLed3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed3Layout.setVerticalGroup(
            jPanelLed3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed3, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 60, -1, -1));

        jPanelLed2.setBackground(java.awt.Color.gray);
        jPanelLed2.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed2Layout = new javax.swing.GroupLayout(jPanelLed2);
        jPanelLed2.setLayout(jPanelLed2Layout);
        jPanelLed2Layout.setHorizontalGroup(
            jPanelLed2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed2Layout.setVerticalGroup(
            jPanelLed2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed2, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 60, -1, -1));

        jPanelLed1.setBackground(java.awt.Color.gray);
        jPanelLed1.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanelLed1Layout = new javax.swing.GroupLayout(jPanelLed1);
        jPanelLed1.setLayout(jPanelLed1Layout);
        jPanelLed1Layout.setHorizontalGroup(
            jPanelLed1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLed1Layout.setVerticalGroup(
            jPanelLed1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelLed1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 60, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("OFF(0)");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 40, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("ON(1)");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 125, 30, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("ON(1)");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 135, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("ON(1)");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 135, 30, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("OFF(0)");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 40, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("OFF(0)");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 40, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel7.setText("DipSwitchs");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 70, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("MODULE 01");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel9.setText("Serial Communication");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 315, 140, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel10.setText("Action Modes");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 90, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel11.setText("Control Mode");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 314, 100, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel12.setText("PushButtons");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 230, 70, -1));

        jLabel13.setText("7");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 46, 10, -1));

        jLabel14.setText("1");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 46, 10, -1));

        jLabel15.setText("2");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 46, 10, -1));

        jLabel16.setText("3");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 46, 10, -1));

        jLabel17.setText("4");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 46, 10, -1));

        jLabel18.setText("5");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 46, 10, -1));

        jLabel19.setText("6");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 46, 10, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 10, 90));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 390, 10));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 390, 10));

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 10, 180));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 105, 10));

        jRadioBuutonBinMode.setSelected(true);
        jRadioBuutonBinMode.setText("Bin2Dec");
        jRadioBuutonBinMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBuutonBinModeActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioBuutonBinMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 120, 30));

        jRadioButtonGatesMode.setText("Gates");
        jRadioButtonGatesMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGatesModeActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButtonGatesMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 110, 40));

        jPanelConnectionStatus.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanelConnectionStatusLayout = new javax.swing.GroupLayout(jPanelConnectionStatus);
        jPanelConnectionStatus.setLayout(jPanelConnectionStatusLayout);
        jPanelConnectionStatusLayout.setHorizontalGroup(
            jPanelConnectionStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelConnectionStatusLayout.setVerticalGroup(
            jPanelConnectionStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelConnectionStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 350, 43, 43));

        jPanelBySoftwareColor.setBackground(new java.awt.Color(255, 255, 204));

        jCheckBoxSoftware.setSelected(true);
        jCheckBoxSoftware.setText("By Software");
        jCheckBoxSoftware.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxSoftwareMouseClicked(evt);
            }
        });
        jCheckBoxSoftware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSoftwareActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBySoftwareColorLayout = new javax.swing.GroupLayout(jPanelBySoftwareColor);
        jPanelBySoftwareColor.setLayout(jPanelBySoftwareColorLayout);
        jPanelBySoftwareColorLayout.setHorizontalGroup(
            jPanelBySoftwareColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBySoftwareColorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBoxSoftware, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBySoftwareColorLayout.setVerticalGroup(
            jPanelBySoftwareColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBySoftwareColorLayout.createSequentialGroup()
                .addComponent(jCheckBoxSoftware)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBySoftwareColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 130, 22));

        jPanelByHardwareColor.setBackground(new java.awt.Color(204, 255, 255));

        jCheckBoxHardware.setText("By Hardware");
        jCheckBoxHardware.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxHardwareMouseClicked(evt);
            }
        });
        jCheckBoxHardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHardwareActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelByHardwareColorLayout = new javax.swing.GroupLayout(jPanelByHardwareColor);
        jPanelByHardwareColor.setLayout(jPanelByHardwareColorLayout);
        jPanelByHardwareColorLayout.setHorizontalGroup(
            jPanelByHardwareColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelByHardwareColorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBoxHardware, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelByHardwareColorLayout.setVerticalGroup(
            jPanelByHardwareColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelByHardwareColorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBoxHardware))
        );

        getContentPane().add(jPanelByHardwareColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 130, 22));

        jButtonConnect.setText("Connect");
        jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonConnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 345, 110, 25));

        jButtonDisconnect.setText("Disconnect");
        jButtonDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisconnectActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDisconnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 375, 110, 25));

        jToggleButtonInput1.setBackground(java.awt.Color.white);
        jToggleButtonInput1.setText("OFF");
        jToggleButtonInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonInput1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButtonInput1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 55, 40));

        jToggleButtonInput2.setBackground(new java.awt.Color(255, 255, 255));
        jToggleButtonInput2.setText("OFF");
        jToggleButtonInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonInput2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButtonInput2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 55, 40));

        jComboBoxSerialCOM.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jComboBoxSerialCOM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7" }));
        jComboBoxSerialCOM.setOpaque(false);
        getContentPane().add(jComboBoxSerialCOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 70, 30));

        jMenuFile.setMnemonic('F');
        jMenuFile.setText("File");

        jMenuItemRestart.setText("Restart");
        jMenuItemRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRestartActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemRestart);
        jMenuFile.add(jSeparator7);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);
        jMenuFile.getAccessibleContext().setAccessibleDescription("");

        jMenuEdit.setMnemonic('S');
        jMenuEdit.setText("Status");

        jMenuContolMode.setText("Control Mode");

        jRadioButtonMenuItemSoftware.setSelected(true);
        jRadioButtonMenuItemSoftware.setText("By Software");
        jMenuContolMode.add(jRadioButtonMenuItemSoftware);

        jRadioButtonMenuItemHardware.setText("By Hardware");
        jMenuContolMode.add(jRadioButtonMenuItemHardware);

        jMenuEdit.add(jMenuContolMode);
        jMenuEdit.add(jSeparator10);

        jMenuConnection.setText("Connection");

        jRadioButtonMenuItemConnected.setText("Connected");
        jMenuConnection.add(jRadioButtonMenuItemConnected);

        jRadioButtonMenuItemDisconnected.setSelected(true);
        jRadioButtonMenuItemDisconnected.setText("Disconnected");
        jMenuConnection.add(jRadioButtonMenuItemDisconnected);

        jMenuEdit.add(jMenuConnection);
        jMenuEdit.add(jSeparator2);

        jMenuOperationalMode.setText("Operational Mode");

        jRadioButtonMenuItemBinary.setSelected(true);
        jRadioButtonMenuItemBinary.setText("Binary");
        jMenuOperationalMode.add(jRadioButtonMenuItemBinary);

        jRadioButtonMenuItemGates.setSelected(true);
        jRadioButtonMenuItemGates.setText("Gates");
        jMenuOperationalMode.add(jRadioButtonMenuItemGates);

        jMenuEdit.add(jMenuOperationalMode);

        jMenuBar1.add(jMenuEdit);

        jMenuHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help.png"))); // NOI18N
        jMenuHelp.setMnemonic('H');
        jMenuHelp.setText("Help");
        jMenuHelp.add(jSeparator9);

        jMenuItemAbout.setText("About");
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     */
    private void restartInterface() {
        allLedsOFF();
        // Starts all interger variables
        decimalValue = gate = buttonInput1 = buttonInput2 = 0;
        // Starts controled by software
        operationalControl = BY_SOFTWARE;
        // Starts system in binary operation mode
        operationMode = BIN_MODE;
        // Starts all check boxes
        jCheckBoxHardware.setSelected(false);
        jCheckBoxSoftware.setSelected(true);
        jCheckBoxSoftware.setSelected(true);
        jCheckBoxHardware.setSelected(false);
        // Starts all combo's boxes
        jComboBoxGatesMenu.setEnabled(false);
        jComboBoxGatesMenu.setSelectedIndex(0);
        if (arduinoUNO == null) { // If doesn't have connection
            jComboBoxSerialCOM.setSelectedIndex(6);
        }
        // Starts all radio's buttons
        jRadioBuutonBinMode.setSelected(true);
        jRadioButtonGatesMode.setSelected(false);
        // Starts all toggle's buttons
        jToggleButtonInput1.setEnabled(false);
        jToggleButtonInput2.setEnabled(false);
        jToggleButtonInput1.setText("OFF");
        jToggleButtonInput2.setText("OFF");
        jToggleButtonInput1.setSelected(false);
        jToggleButtonInput2.setSelected(false);
        // Starts MENU bar
        jRadioButtonMenuItemConnected.setEnabled(false);
        jRadioButtonMenuItemConnected.setSelected(false);
        jRadioButtonMenuItemDisconnected.setEnabled(false);
        jRadioButtonMenuItemDisconnected.setSelected(true);
        jRadioButtonMenuItemSoftware.setEnabled(false);
        jRadioButtonMenuItemSoftware.setSelected(true);
        jRadioButtonMenuItemHardware.setEnabled(false);
        jRadioButtonMenuItemHardware.setSelected(false);
        jRadioButtonMenuItemBinary.setEnabled(false);
        jRadioButtonMenuItemBinary.setSelected(true);
        jRadioButtonMenuItemGates.setEnabled(false);
        jRadioButtonMenuItemGates.setSelected(false);
        // Set dipswtichs values with zero
        jSliderDSW1.setValue(0);
        jSliderDSW2.setValue(0);
        jSliderDSW3.setValue(0);
    }

    /**
     *
     */
    private void allLedsOFF() {
        // Set all leds OFF
        jPanelLed1.setBackground(Color.GRAY);
        jPanelLed2.setBackground(Color.GRAY);
        jPanelLed3.setBackground(Color.GRAY);
        jPanelLed4.setBackground(Color.GRAY);
        jPanelLed5.setBackground(Color.GRAY);
        jPanelLed6.setBackground(Color.GRAY);
        jPanelLed7.setBackground(Color.GRAY);
    }

    /**
     *
     */
    private void allLedsON() {
        // Set all leds ON
        jPanelLed1.setBackground(Color.GREEN);
        jPanelLed2.setBackground(Color.GREEN);
        jPanelLed3.setBackground(Color.GREEN);
        jPanelLed4.setBackground(Color.GREEN);
        jPanelLed5.setBackground(Color.GREEN);
        jPanelLed6.setBackground(Color.GREEN);
        jPanelLed7.setBackground(Color.GREEN);
    }

    /**
     *
     */
    private void action() {
        int gateResult = 0;
        if (operationMode == BIN_MODE) {
            allLedsOFF();
            decimalValue = jSliderDSW1.getValue() + jSliderDSW2.getValue() * 2 + jSliderDSW3.getValue() * 4;
            switch (decimalValue) {
                case 1:
                    jPanelLed1.setBackground(Color.GREEN);
                    break;
                case 2:
                    jPanelLed1.setBackground(Color.GREEN);
                    jPanelLed2.setBackground(Color.GREEN);
                    break;
                case 3:
                    jPanelLed1.setBackground(Color.GREEN);
                    jPanelLed2.setBackground(Color.GREEN);
                    jPanelLed3.setBackground(Color.GREEN);
                    break;
                case 4:
                    jPanelLed1.setBackground(Color.GREEN);
                    jPanelLed2.setBackground(Color.GREEN);
                    jPanelLed3.setBackground(Color.GREEN);
                    jPanelLed4.setBackground(Color.GREEN);
                    break;
                case 5:
                    jPanelLed1.setBackground(Color.GREEN);
                    jPanelLed2.setBackground(Color.GREEN);
                    jPanelLed3.setBackground(Color.GREEN);
                    jPanelLed4.setBackground(Color.GREEN);
                    jPanelLed5.setBackground(Color.GREEN);
                    break;
                case 6:
                    jPanelLed1.setBackground(Color.GREEN);
                    jPanelLed2.setBackground(Color.GREEN);
                    jPanelLed3.setBackground(Color.GREEN);
                    jPanelLed4.setBackground(Color.GREEN);
                    jPanelLed5.setBackground(Color.GREEN);
                    jPanelLed6.setBackground(Color.GREEN);
                    break;
                case 7:
                    allLedsON();
                    break;
                default:
                    break;
            }
            // Send int value to arduino board
            if (arduinoUNO != null && (operationalControl == BY_SOFTWARE)) {
                arduinoUNO.writeData(decimalValue);
            }
        } else if (operationMode == GATES_MODE) {
            gate = jComboBoxGatesMenu.getSelectedIndex();
            switch (gate) {
                case 1: // NOT
                    gateResult = buttonInput1;
                    break;
                case 2: // AND
                    gateResult = buttonInput1 & buttonInput2;
                    break;
                case 3: // OR
                    gateResult = buttonInput1 | buttonInput2;
                    break;
                case 4: // NOR
                    gateResult = ((buttonInput1 | buttonInput2) == 1) ? 0 : 1;
                    break;
                case 5: // NAND
                    gateResult = ((buttonInput1 & buttonInput2) == 1) ? 0 : 1;
                    break;
                case 6: // XOR
                    gateResult = (buttonInput1 != buttonInput2) ? 1 : 0;
                    break;
                case 7: // XNOR
                    gateResult = (buttonInput1 == buttonInput2) ? 1 : 0;
                    break;
                default:
                    break;
            }

            // Define output value in Led1
            if (gateResult == 1) {
                jPanelLed1.setBackground(Color.GREEN);
            } else {
                jPanelLed1.setBackground(Color.GRAY);
            }
            if (arduinoUNO != null) {
                arduinoUNO.writeData(gateResult);
            }
        }
        //System.out.println(decimalValue);
    }

    private void jRadioBuutonBinModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBuutonBinModeActionPerformed
        // Enables
        operationMode = BIN_MODE;
        jRadioBuutonBinMode.setSelected(true);
        jSliderDSW1.setEnabled(true);
        jSliderDSW2.setEnabled(true);
        jSliderDSW3.setEnabled(true);
        // Disables
        jComboBoxGatesMenu.setEnabled(false);
        jToggleButtonInput1.setEnabled(false);
        jToggleButtonInput2.setEnabled(false);
        jRadioButtonGatesMode.setSelected(false);

        action();
    }//GEN-LAST:event_jRadioBuutonBinModeActionPerformed

    private void jRadioButtonGatesModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGatesModeActionPerformed
        allLedsOFF();

        // Enables
        operationMode = GATES_MODE;
        jRadioButtonGatesMode.setSelected(true);
        jRadioButtonMenuItemGates.setSelected(true);
        jComboBoxGatesMenu.setEnabled(true);
        jToggleButtonInput1.setEnabled(true);
        gate = jComboBoxGatesMenu.getSelectedIndex();
        if (gate == 1) { // Port NOT type has been chosen
            jToggleButtonInput2.setEnabled(false); // Disable second button input
        } else {
            jToggleButtonInput2.setEnabled(true);
        }

        // Disables
        jRadioButtonMenuItemBinary.setSelected(false);
        jRadioBuutonBinMode.setSelected(false);
        jSliderDSW1.setEnabled(false);
        jSliderDSW1.setValue(0);
        jSliderDSW2.setEnabled(false);
        jSliderDSW2.setValue(0);
        jSliderDSW3.setEnabled(false);
        jSliderDSW3.setValue(0);

        action();
    }//GEN-LAST:event_jRadioButtonGatesModeActionPerformed

    private void jSliderDSW3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW3MouseClicked
        action();
    }//GEN-LAST:event_jSliderDSW3MouseClicked

    private void jSliderDSW2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW2MouseClicked
        action();
    }//GEN-LAST:event_jSliderDSW2MouseClicked

    private void jSliderDSW1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW1MouseClicked
        action();
    }//GEN-LAST:event_jSliderDSW1MouseClicked

    private void jSliderDSW3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW3MouseDragged
        action();
    }//GEN-LAST:event_jSliderDSW3MouseDragged

    private void jSliderDSW2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW2MouseDragged
        action();
    }//GEN-LAST:event_jSliderDSW2MouseDragged

    private void jSliderDSW1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW1MouseDragged
        action();
    }//GEN-LAST:event_jSliderDSW1MouseDragged

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        if (arduinoUNO != null) {
            arduinoUNO.close();
        }
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectActionPerformed
        if (arduinoUNO == null) {
            comPortID = "COM" + Integer.toString(jComboBoxSerialCOM.getSelectedIndex() + 1);
            arduinoUNO = new SerialCOM(comPortID, BAUD_RATE);
            jRadioButtonMenuItemConnected.setSelected(true);
            jRadioButtonMenuItemDisconnected.setSelected(false);
            jButtonConnect.setEnabled(false);
            jPanelConnectionStatus.setBackground(Color.GREEN);
            jComboBoxSerialCOM.setEnabled(false);
        } else {
            //System.out.println("COM port already open.");
            JOptionPane.showMessageDialog(null, "COM port already open.", "COM Open", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_jButtonConnectActionPerformed

    private void jButtonDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisconnectActionPerformed
        if (this.arduinoUNO != null) {
            try {
                arduinoUNO.flushSerial();
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            arduinoUNO.close();
            jPanelConnectionStatus.setBackground(Color.RED);
            jRadioButtonMenuItemConnected.setSelected(true);
            jRadioButtonMenuItemDisconnected.setSelected(false);
            jComboBoxSerialCOM.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonDisconnectActionPerformed

    private void jCheckBoxSoftwareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxSoftwareMouseClicked
        // Enables
        operationalControl = BY_SOFTWARE;
        jCheckBoxSoftware.setSelected(true);
        jRadioButtonMenuItemSoftware.setSelected(true);
        // Disables
        jCheckBoxHardware.setSelected(false);
        jRadioButtonMenuItemHardware.setSelected(false);
    }//GEN-LAST:event_jCheckBoxSoftwareMouseClicked

    private void jCheckBoxHardwareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxHardwareMouseClicked
        // Enables
        operationalControl = BY_HARDWARE;
        jCheckBoxHardware.setSelected(true);
        jRadioButtonMenuItemHardware.setSelected(true);
        // Disables
        jCheckBoxSoftware.setSelected(false);
        jRadioButtonMenuItemSoftware.setSelected(false);
    }//GEN-LAST:event_jCheckBoxHardwareMouseClicked

    private void jToggleButtonInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonInput1ActionPerformed
        if (buttonInput1 == 0 && !jToggleButtonInput1.isSelected()) {
            jToggleButtonInput1.setText("ON");
            buttonInput1 = 1;
        } else {
            jToggleButtonInput1.setText("OFF");
            buttonInput1 = 0;
        }
        action();
    }//GEN-LAST:event_jToggleButtonInput1ActionPerformed

    private void jToggleButtonInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonInput2ActionPerformed
        if (buttonInput2 == 0 && !jToggleButtonInput2.isSelected()) {
            jToggleButtonInput2.setText("ON");
            buttonInput2 = 1;
        } else {
            jToggleButtonInput2.setText("OFF");
            buttonInput2 = 0;
        }
        action();
    }//GEN-LAST:event_jToggleButtonInput2ActionPerformed

    private void jSliderDSW1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW1MousePressed
        action();
    }//GEN-LAST:event_jSliderDSW1MousePressed

    private void jSliderDSW2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW2MousePressed
        action();
    }//GEN-LAST:event_jSliderDSW2MousePressed

    private void jSliderDSW3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderDSW3MousePressed
        action();
    }//GEN-LAST:event_jSliderDSW3MousePressed

    private void jComboBoxGatesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGatesMenuActionPerformed
        gate = jComboBoxGatesMenu.getSelectedIndex();
        if (gate == 1) { // If NOT type gate has been chosen
            jToggleButtonInput2.setEnabled(false); // Disable second input
        } else {
            jToggleButtonInput2.setEnabled(true); // Enable second input
        }
        action();
    }//GEN-LAST:event_jComboBoxGatesMenuActionPerformed

    private void jComboBoxGatesMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxGatesMenuMouseClicked
        if (gate == 1) { // Port NOT type has been chosen
            jToggleButtonInput2.setEnabled(false); // Disable second button input
        } else {
            jToggleButtonInput2.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBoxGatesMenuMouseClicked

    private void jCheckBoxSoftwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSoftwareActionPerformed
        jCheckBoxSoftwareMouseClicked(null);
    }//GEN-LAST:event_jCheckBoxSoftwareActionPerformed

    private void jCheckBoxHardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHardwareActionPerformed
        jCheckBoxHardwareMouseClicked(null);
    }//GEN-LAST:event_jCheckBoxHardwareActionPerformed

    private void jMenuItemRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRestartActionPerformed
        restartInterface();
    }//GEN-LAST:event_jMenuItemRestartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                (new MainFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnect;
    private javax.swing.JButton jButtonDisconnect;
    private javax.swing.JCheckBox jCheckBoxHardware;
    private javax.swing.JCheckBox jCheckBoxSoftware;
    private javax.swing.JComboBox jComboBoxGatesMenu;
    private javax.swing.JComboBox jComboBoxSerialCOM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuConnection;
    private javax.swing.JMenu jMenuContolMode;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemRestart;
    private javax.swing.JMenu jMenuOperationalMode;
    private javax.swing.JPanel jPanelByHardwareColor;
    private javax.swing.JPanel jPanelBySoftwareColor;
    private javax.swing.JPanel jPanelConnectionStatus;
    private javax.swing.JPanel jPanelLed1;
    private javax.swing.JPanel jPanelLed2;
    private javax.swing.JPanel jPanelLed3;
    private javax.swing.JPanel jPanelLed4;
    private javax.swing.JPanel jPanelLed5;
    private javax.swing.JPanel jPanelLed6;
    private javax.swing.JPanel jPanelLed7;
    private javax.swing.JRadioButton jRadioButtonGatesMode;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemBinary;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemConnected;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemDisconnected;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemGates;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemHardware;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemSoftware;
    private javax.swing.JRadioButton jRadioBuutonBinMode;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JSlider jSliderDSW1;
    private javax.swing.JSlider jSliderDSW2;
    private javax.swing.JSlider jSliderDSW3;
    private javax.swing.JToggleButton jToggleButtonInput1;
    private javax.swing.JToggleButton jToggleButtonInput2;
    // End of variables declaration//GEN-END:variables
}
